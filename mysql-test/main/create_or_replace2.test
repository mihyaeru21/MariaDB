#
# Check CREATE OR REPLACE TABLE for test that requires DEBUG
#

--source include/have_debug.inc
--source include/have_binlog_format_row.inc
--source include/have_innodb.inc
--source include/master-slave.inc

--disable_warnings
drop table if exists t1;
--enable_warnings
SET @old_debug= @@session.debug;

#
# MDEV-5854
# Interrupted CREATE OR REPLACE is written into binlog, and in a wrong format
#

CREATE TABLE t1 (i INT, KEY(i)) ENGINE=InnoDB;
CREATE OR REPLACE TEMPORARY TABLE tmp (a int, b int, key(a)) engine=myisam;
SET debug_dbug='+d,send_kill_after_delete';
CREATE OR REPLACE TABLE t1 LIKE tmp;
SET debug_dbug=@old_debug;
SHOW TABLES;
show create table t1;
--sync_slave_with_master
SHOW TABLES;
show create table t1;
--connection master

--disable_warnings
drop temporary table if exists tmp;
--enable_warnings
drop table t1;
--source include/rpl_end.inc


--echo #
--echo # MDEV-25292 Atomic CREATE OR REPLACE TABLE
--echo #
set @saved_debug_dbug= @@session.debug_dbug;
create table t1 (a int);
insert t1 values (1), (1);
create table t2 (c int);
lock tables t2 write, t1 write;
set session debug_dbug= '+d,atomic_replace_external_lock_fail';
--error ER_LOCK_TABLE_FULL
create or replace table t2 (y int) as select * from t1;
let $MYSQLD_DATADIR= `SELECT @@datadir`;
--list_files $MYSQLD_DATADIR/test *sql*
show create table t1;
unlock tables;
drop tables t2, t1;
set session debug_dbug= @saved_debug_dbug;

--echo # Test entry_pos in higher position, so drop chain executes before create chain
--echo # (see commit message: On linking two chains together)
create table t1 (c int);
--error ER_DUP_KEYNAME
create or replace table t1 (a int, b int, key k (a), key k (b));
--error ER_DUP_KEYNAME
create or replace table t1 (a int, b int, key k (a), key k (b));
drop table t1;

--echo # Test multi-byte characters in table name
set names utf8;
let $save_debug=`select @@debug_dbug`;
let $MYSQLD_DATADIR= `SELECT @@datadir`;
# Filename is too long because it is converted to @274e@274e@274e@274e...
# so each '❎' is 5 bytes in filesystem, 51 x 5 = 255 bytes
let $t= `select repeat('❎', 51)`;
--error ER_CANT_CREATE_TABLE
eval create table $t (x int);
# OK with 64-characters table name, filesystem name is 40 x 5 + 24 = 224 bytes
let $t= `select concat(repeat('t', 24), repeat('❎', 40))`;
eval create table $t (x int);
# Not OK with 65-characters table name
let $t2= `select concat(repeat('t', 25), repeat('❎', 40))`;
--error ER_WRONG_TABLE_NAME
eval create table $t2 (x int);
show tables;
# Let's try atomic replace with such long name and see what happens
eval create or replace table $t (y int);
eval show create table $t;
set @@debug_dbug="+d,ddl_log_create_after_save_backup", @debug_crash_counter=1;
--exec echo "restart" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--disable_reconnect
--error 2013
eval create or replace table $t (z int);
--replace_regex /-\w+-\w+-ttt/-PID-TID-ttt/
--list_files $MYSQLD_DATADIR/test *sql*
--enable_reconnect
--source include/wait_until_connected_again.inc
eval drop table $t;
eval set @@debug_dbug="$save_debug";
